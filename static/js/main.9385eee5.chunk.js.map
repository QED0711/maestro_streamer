{"version":3,"sources":["state/main/state.js","state/main/setters.js","state/main/methods.js","state/main/mainProvider.js","helpers/parseQueryString.js","components/MediaPanel.js","components/SessionWindow.js","helpers/socket.js","components/ConnectionManager.js","components/ConfigPanel.js","components/ChatBox.js","components/ReorderPanel.js","components/MediaSettingsPanel.js","components/MediaSettingsContainer.js","App.js","serviceWorker.js","index.js","media/menu.svg","media/close.svg","logo.svg","../node_modules/peerjs/dist sync"],"names":["state","audioContext","masterGain","authority","knownAuthorities","sessionAuthorization","ring","userID","connectedUsers","localStreamID","streams","streamsData","hiddenVideos","showIDs","chat","setters","appendStream","stream","source","console","log","id","this","setStateMaster","prevState","map","includes","push","appendStreamData","streamID","data","appendKnownAuthority","authorityLevel","appendChatMessage","chatObj","removeStream","filter","appendUser","toggleRing","appendHiddenVideo","name","showHiddenVideo","setStreamOrder","streamOrder","position","find","methods","getAuthority","getKnownAuthorites","getRing","getUserID","getConnectedUsers","main","Multistate","addCustomSetters","addMethods","mainContext","context","MainProvider","createProvider","parseQueryString","queryString","val","params","URLSearchParams","obj","keys","key","getAll","length","get","parseFloat","MediaPanel","useContext","queryParams","window","location","search","useState","initMasterGainMeter","setInitMasterGainMeter","masterGainLevel","setMasterGainLevel","useEffect","video","gainSlider","gainNode","muteButton","forEach","document","getElementById","paused","onclick","createMediaStreamSource","createGain","err","connect","gain","value","disabled","innerText","onchange","e","target","srcObject","muted","controls","addEventListener","play","preventDefault","altKey","addStreamsToVideos","masterMeter","masterGainMeterNode","webAudioPeakMeter","createMeterNode","createMeter","className","htmlFor","type","min","max","step","onChange","onClick","SessionWindow","props","useParams","sessionID","to","SERVER_HOST","process","REACT_APP_SERVER_HOST","config","server_host","hostname","SERVER_PORT","REACT_APP_SERVER_PORT","server_port","SERVER_PROTOCOL","REACT_APP_SERVER_PROTOCOL","server_protocol","socket","io","DEFAULT_AUDIO_SETTINGS","autoGainControl","echoCancellation","noiseSuppression","sampleSize","channelCount","ConnectionManager","setAuthority","setShowIDs","peer","Peer","undefined","path","host","on","setUserID","emit","part","navigator","mediaDevices","getUserMedia","audio","then","rawStream","handlePageUnload","call","metadata","answer","userVideoStream","remoteAuthority","message","self","time","Date","now","ConfigPanel","handleRingClick","a","ringInterval","setInterval","clearInterval","ChatBox","isScrolledToBottom","setIsScrolledToBottom","messageContainer","useRef","formRef","formatTimeNumber","num","element","current","scrollTop","scrollHeight","ref","onScroll","currentScroll","clientHeight","d","formattedTime","getHours","getMinutes","getSeconds","onSubmit","textElement","firstChild","test","chatMessage","onKeyDown","keyCode","shiftKey","dispatchEvent","Event","ReorderPanel","orderNums","getElementsByClassName","newOrder","el","parseInt","dataset","sort","b","i","defaultValue","data-id","MediaSettingsPanel","setQueryString","showApplyButton","setShowApplyButton","modifiedQueryString","setModifiedQueryString","handleShowVideoButtonClick","handleCheckNext","nextSibling","checked","override","settings","settingsObj","setting","updatedString","Object","entries","parseSettings","data-key","defaultChecked","data-override","width","height","frameRate","resizeMode","href","split","btns","renderShowVideoButtons","MediaSettingsContainer","showSettingsPanel","setShowSettingsPanel","style","cursor","display","src","close","menu","App","audioCtx","AudioContext","destination","setAudioContext","setMasterGain","basename","exact","Boolean","match","ReactDOM","render","serviceWorker","ready","registration","unregister","catch","error","module","exports","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.9385eee5.chunk.js","sourcesContent":["\nconst state = {\n\n    audioContext: null,\n    masterGain: null,\n\n    authority: null,\n    knownAuthorities: {},\n    \n    sessionAuthorization: true,\n    ring: false,\n    \n    userID: null,\n    connectedUsers: [],\n    localStreamID: null,\n    streams: [],\n    streamsData: {},\n\n    hiddenVideos: {},\n\n    showIDs: false,\n\n    chat: []\n\n\n}\n\nexport default state;\n","const setters = {\n\n    appendStream(stream, source=null){\n        console.log(stream.id)\n        this.setStateMaster(prevState => {\n            // 1. append string to streams state\n            const streams = [...prevState.streams]\n            // const streamIDs = streams.map(streamObj => streamObj.source.mediaStream.id)\n            const streamIDs = streams.map(stream => stream.id)\n            \n            if(!streamIDs.includes(stream.id)){\n                // create gain node for stream\n                // const source = this.state.audioContext.createMediaStreamSource(stream)\n                // const gainNode = this.state.audioContext.createGain()\n                // gainNode.gain.value = 0\n                \n                // connect gainNode to source and destination\n                // source.connect(gainNode)\n                // gainNode.connect(this.state.audioContext.destination)\n\n                // push to streams\n                streams.push(stream)\n            } \n\n            // 2. if the stream source is the local stream, set the localStreamID\n            if(source === \"local\") return {streams, localStreamID: stream.id}\n \n            // else, just set streams\n            return {streams}\n        })\n    },\n\n    appendStreamData(streamID, data){\n        this.setStateMaster(prevState => {\n            const streamsData = {...prevState.streamsData}\n\n            streamsData[streamID] = data\n\n            return {streamsData}\n\n        })\n    },\n\n    appendKnownAuthority(userID, authorityLevel){\n        this.setStateMaster(prevState => {\n            const knownAuthorities = {...prevState.knownAuthorities}\n\n            knownAuthorities[userID] = authorityLevel\n            return {knownAuthorities}\n\n        })\n    },\n\n    appendChatMessage(chatObj){\n        this.setStateMaster(prevState => {\n            const chat = [...prevState.chat];\n\n            chat.push(chatObj)\n            return {chat}\n        })\n    },\n\n    removeStream(streamID){\n        this.setStateMaster(prevState => {\n\n            let streams = [...prevState.streams]\n            streams = streams.filter(stream => streamID !== stream.id)\n\n            return {streams}\n        })\n    },\n\n    appendUser(userID){\n        this.setStateMaster(prevState => {\n            let connectedUsers = [...prevState.connectedUsers];\n            connectedUsers.push(userID)\n            return {connectedUsers}\n        })\n    },\n\n    toggleRing(){\n        this.setStateMaster(prevState => {\n            return {ring: !prevState.ring}\n        })\n    },\n\n    appendHiddenVideo(streamID, name){\n        this.setStateMaster(prevState => {\n            const hiddenVideos = {...prevState.hiddenVideos}\n            if(!(streamID in hiddenVideos)) hiddenVideos[streamID] = name\n\n            return {hiddenVideos}\n        })\n    },\n\n    showHiddenVideo(streamID) {\n        this.setStateMaster(prevState => {\n            let hiddenVideos = {...prevState.hiddenVideos}\n            delete hiddenVideos[streamID]\n\n            return {hiddenVideos}\n        })\n    },\n\n    setStreamOrder(streamOrder){\n        this.setStateMaster(prevState => {\n            let streams = []\n\n            for(let position of streamOrder){\n                // iter through the new order, finding the associated stream each time and pushing that to the newly ordered streams\n                streams.push(prevState.streams.find(stream => stream.id === position[1]))\n            }\n\n            console.log({streams})\n\n            return {streams}\n        })\n    }\n\n}\n\nexport default setters;\n","\nconst methods = {\n\n    getAuthority(){\n        return this.state.authority\n    },\n\n    getKnownAuthorites(){\n        return this.state.knownAuthorities\n    },\n\n    getRing(){\n        return this.state.ring;\n    },\n\n    getUserID(){\n        return this.state.userID;\n    },\n\n    getConnectedUsers(){\n        return this.state.connectedUsers;\n    }\n\n}\n\nexport default methods;\n","\nimport Multistate from 'multistate';\n\nimport state from './state'\nimport setters from './setters'\nimport methods from './methods'\n\n\nconst main = new Multistate(state)\n\nmain.addCustomSetters(setters)\nmain.addMethods(methods)\n\n\n\nexport const mainContext = main.context;\nexport const MainProvider = main.createProvider();\n\n","\nconst parseQueryString = (queryString) => {\n    // parse query string\n    const params = new URLSearchParams(queryString);\n\n    const obj = {};\n\n    // iterate over all keys\n    let val;\n    for (const key of params.keys()) {\n        if (params.getAll(key).length > 1) {\n            val = params.getAll(key);\n        } else {\n            val = params.get(key);\n        }\n\n        // handle numbers\n        if([\"0\", \"0.0.\"].includes(val) || parseFloat(val)) val = parseFloat(val)\n\n        // handle booleans\n        if(val === \"false\") val = false;\n        if(val === \"true\") val = true;\n\n        obj[key] = val\n    }\n    return obj\n}\n\n\n\nexport default parseQueryString","import React, { useContext, useEffect, useState } from 'react';\nimport webAudioPeakMeter from 'web-audio-peak-meter';\n\nimport \"../css/media-panel.css\"\n\n// =========================== STATE ===========================\nimport { mainContext } from '../state/main/mainProvider';\n\n// =========================== HELPERS ===========================\nimport parseQueryString from '../helpers/parseQueryString';\n\nconst MediaPanel = () => {\n\n    const { state, setters } = useContext(mainContext);\n    const queryParams = parseQueryString(window.location.search);\n\n    const [initMasterGainMeter, setInitMasterGainMeter] = useState(true)\n    const [masterGainLevel, setMasterGainLevel] = useState(1)\n\n    // EVENTS\n    const handleMasterGainChange = e => {\n        state.masterGain.gain.value = parseFloat(e.target.value)\n        setMasterGainLevel(e.target.value)\n    }\n\n    const handleHideClick = streamID => e => {\n        const name = document.getElementById(`name-${streamID}`).innerText\n        setters.appendHiddenVideo(streamID, name)\n    }\n\n    // HELPERS\n    const renderVideos = (streams) => {\n\n\n        return streams.map(stream => {\n            return (\n                <div\n                    className={`video-container video-container-hidden-${stream.id in state.hiddenVideos}`}\n                    key={stream.id}\n                    id={stream.id}\n\n                >\n                    <h3 id={`name-${stream.id}`} className=\"video-header user-name\" onClick={handleHideClick(stream.id)}>\n                        {\n                            state.localStreamID === stream.id\n                                ? queryParams.name\n                                : state.streamsData[stream.id]?.name || \"--\"\n                        }\n                    </h3>\n\n                    <h4 className=\"video-header user-location\">\n                        {\n                            state.localStreamID === stream.id\n                                ? queryParams.location\n                                : state.streamsData[stream.id]?.location || \"--\"\n                        }\n                    </h4>\n                    <video id={`video-${stream.id}`}></video>\n                    {state.showIDs && <em><sub className=\"sub-id\">{stream.id}</sub></em>}\n                    {/* <div className=\"meters\">\n                        <div id={`pre-meter-${stream.id}`} className=\"peak-meter\"></div>\n                        <div id={`post-meter-${stream.id}`} className=\"peak-meter\"></div>\n\n                    </div> */}\n\n                    <input id={`gain-${stream.id}`} className=\"stream-gain\" type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" /* onChange={handleGainChange(streamObj.gainNode)} */ />\n                    <button id={`mute-btn-${stream.id}`}>Mute</button>\n                </div>\n            )\n        })\n\n\n    }\n\n    useEffect(() => {\n        const addStreamsToVideos = () => {\n            let video,\n                gainSlider,\n                source,\n                gainNode,\n                muteButton,\n                preMeter,\n                postMeter,\n                preMeterNode,\n                postMeterNode;\n\n            state.streams.forEach(stream => {\n\n                video = document.getElementById(`video-${stream.id}`)\n                gainSlider = document.getElementById(`gain-${stream.id}`)\n                muteButton = document.getElementById(`mute-btn-${stream.id}`)\n\n                // preMeter = document.getElementById(`pre-meter-${stream.id}`)\n                // postMeter = document.getElementById(`post-meter-${stream.id}`)\n\n                // if we have added events listeners to any of the elements retrieved above, then they have already been created and we should bail out early\n                if (!video.paused || muteButton.onclick) return // break out early\n\n\n                try {\n                    // source = state.audioContext.createMediaElementSource(video)\n                    source = state.audioContext.createMediaStreamSource(stream)\n                    gainNode = state.audioContext.createGain()\n\n                    // preMeterNode = webAudioPeakMeter.createMeterNode(source, state.audioContext)\n                    // postMeterNode = webAudioPeakMeter.createMeterNode(gainNode, state.audioContext)\n\n                    // webAudioPeakMeter.createMeter(preMeter, preMeterNode)\n                    // webAudioPeakMeter.createMeter(postMeter, postMeterNode)\n                } catch (err) {\n                    console.log(err)\n                    // if there was an error here, it is because we already connected the video to an output source\n                    return\n                }\n\n                source.connect(gainNode)\n                gainNode.connect(state.masterGain)\n\n                // set the self gain to 0\n                if (stream.id === state.localStreamID) {\n                    gainNode.gain.value = 0\n                    gainSlider.disabled = true\n                    muteButton.innerText = \"Unmute\"\n                }\n\n\n                gainSlider.onchange = function (e) {\n                    // video.volume = parseFloat(e.target.value)\n                    gainNode.gain.value = parseFloat(e.target.value)\n                }\n\n                muteButton.onclick = function (e) {\n                    gainSlider.disabled = !gainSlider.disabled\n                    if (gainSlider.disabled) {\n                        gainNode.gain.value = 0\n                        this.innerText = \"Unmute\"\n                    } else {\n                        const value = document.getElementById(`gain-${stream.id}`).value\n                        gainNode.gain.value = value\n                        this.innerText = \"Mute\"\n                    }\n                }\n\n\n                video.srcObject = stream;\n                // video.volume = 0; // allows for the gain node to take over the output gain\n                video.muted = true\n                video.controls = \"controls\"\n\n                // gainSlider.value = stream.id === state.localStreamID ? 0 : 1\n                // video.muted = stream.id === state.localStreamID // mute only the local stream\n\n\n                video.addEventListener(\"loadedmetadata\", () => {\n                    video.play();\n                })\n\n                video.addEventListener(\"mousedown\", e => {\n                    e.preventDefault()\n                    if (e.altKey) setters.removeStream(stream.id)\n                })\n            })\n        }\n\n        addStreamsToVideos()\n\n        // INIT MASTER GAIN METER\n        if (initMasterGainMeter && state.masterGain) {\n\n            const masterMeter = document.getElementById(\"master-gain-meter\")\n            const masterGainMeterNode = webAudioPeakMeter.createMeterNode(state.masterGain, state.audioContext)\n            webAudioPeakMeter.createMeter(masterMeter, masterGainMeterNode)\n\n            setInitMasterGainMeter(false) // so we don't redo on each new stream\n        }\n\n    }, [state.streams])\n\n\n    return (\n        <>\n            <div className=\"master-gain-container\">\n                <label htmlFor=\"master-gain\">Master Gain: {masterGainLevel}</label>\n                <br />\n                <input id=\"master-gain\" type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" onChange={handleMasterGainChange} />\n                <div id=\"master-gain-meter\"></div>\n            </div>\n            <div id=\"media-panel\">\n                {renderVideos(state.streams)}\n            </div>\n        </>\n    )\n\n}\n\nexport default MediaPanel;","import React, { useContext } from 'react';\n\nimport {useParams, Redirect} from 'react-router-dom';\n\n// ====================== STATE ======================\nimport { mainContext } from '../state/main/mainProvider';\n\n// ====================== CHILDREN ======================\nimport MediaPanel from './MediaPanel';\n\nconst SessionWindow = (props) => {\n    \n    const {state} = useContext(mainContext);\n    const {sessionID} = useParams();\n    \n\n\n    if(!state.sessionAuthorization) return <Redirect to=\"/\" />\n\n    return (\n        <div id=\"session-window\">\n            <MediaPanel />\n        </div>\n    )\n}\n\nexport default SessionWindow;","import io from \"socket.io-client\";\nimport config from '../config.json';\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST || config.server_host || window.location.hostname;\nconst SERVER_PORT = process.env.REACT_APP_SERVER_PORT || config.server_port;\nconst SERVER_PROTOCOL = process.env.REACT_APP_SERVER_PROTOCOL || config.server_protocol || \"https\"\n\nconst SERVER_URL = `${SERVER_PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/`\n\n// const socket = io(SERVER_URL, {transports: ['websocket'], rejectUnauthorized: false});\nconst socket = io(\"https://maestrostreamer.com\",);\n\nexport default socket;\n\n","import React, { useEffect, useContext } from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport Peer from 'peerjs'\n\n// ========================= STATE =========================\nimport { mainContext } from '../state/main/mainProvider';\n\n// ========================= HELPERS =========================\nimport socket from '../helpers/socket';\nimport parseQueryString from '../helpers/parseQueryString'\n\n// ========================= CONFIG =========================\nimport config from '../config.json'\n\nconst DEFAULT_AUDIO_SETTINGS = {\n    autoGainControl: false,\n    echoCancellation: false,\n    noiseSuppression: false,\n    sampleSize: 16,\n    channelCount: 1\n}\n\nconst ConnectionManager = () => {\n\n    const { state, setters, methods } = useContext(mainContext);\n    const { sessionID,} = useParams()\n\n\n\n\n\n    useEffect(() => {\n\n        const queryParams = parseQueryString(window.location.search)\n\n        setters.setAuthority(queryParams.authority || 'basic')\n\n        console.log(queryParams)\n\n\n\n        queryParams.showIDs && setters.setShowIDs(true)\n\n        // 1. Peer initialization\n        const peer = new Peer(undefined, {\n            path: \"/peerjs\",\n            host: config.server_host,\n            // port: 80,\n            // secure: true\n            // debug: 3\n        })\n\n\n        peer.on(\"open\", id => {\n            setters.setUserID(id)\n            // console.log({ id, peer })\n            // console.log(\"PEER OPENING\")\n            socket.emit(\"join-session\", { sessionID, userID: id, part: \"PART STAND-IN\" })\n        })\n\n\n        // 2. getting media devices\n        navigator.mediaDevices.getUserMedia({\n            video: queryParams.video === false ? false : {\n                ...queryParams\n            },\n            audio: queryParams.audio === false ? false : {\n                ...DEFAULT_AUDIO_SETTINGS,\n                ...queryParams\n            }\n        }).then(rawStream => {\n                // var ctx = new AudioContext();\n                // var source = ctx.createMediaStreamSource(rawStream);\n                // var dest = ctx.createMediaStreamDestination();\n                // var gainNode = ctx.createGain();\n                // console.log({rawStream, source, dest})\n\n                // source.connect(gainNode);\n                // gainNode.connect(dest);\n\n                // gainNode.gain.value = 0.9\n\n                setters.appendStream(rawStream, \"local\") // this propagates down and adds video to dom\n\n                // HANDLE UNLOAD\n                // if the session the person who started the session leaves, these unload event handlers will inform other session members of their departure so they can clean up any stale user data.\n                const handlePageUnload = e => {\n                    socket.emit(\"user-leaving\", { streamID: rawStream.id })\n                }\n\n                window.addEventListener(\"unload\", handlePageUnload)\n                window.addEventListener(\"beforeunload\", handlePageUnload)\n\n                peer.on(\"call\", call => {\n                    \n                    /* \n                    IF STATEMENT:\n                        - if the person calling me is an admin, I will answer with my stream regardless of my own authority\n                        - if I am an admin, I will respond with my stream to the person calling me regardless of their authority\n                    \n                    */\n                    if(methods.getAuthority() === \"admin\" || call.metadata.authority === \"admin\"){\n                        call.answer(rawStream)\n                    } else {\n                        call.answer(null)\n                    }\n                    // const video = document.createElement(\"video\")\n                    // video.muted = true;\n\n\n                    call.on(\"stream\", userVideoStream => {\n                        // userVideoStreams are from users who were already connected\n                        socket.emit(\"request-user-data\", { streamID: userVideoStream.id }) // requests data from the user based on their stream id\n                        setters.appendStream(userVideoStream)\n                        // addVideoStream(video, userVideoStream)\n                    })\n\n                    // call.on(\"close\", () => {\n                    //     console.log(\"REMOVING\")\n                    //     // video.parentElement.remove()\n                    //     // video.remove()\n                    // })\n                })\n\n                socket.on(\"user-connected\", ({ userID, authority: remoteAuthority }) => {\n                    // this function will call and provide YOUR STREAM to another user\n\n                    console.log(`RING: ${remoteAuthority},${userID}`)\n                    console.log(\"CONNECTED USERS\", methods.getConnectedUsers())\n\n\n                    /* \n                    IF STATEMENT\n                        - if we have not already connected to you, we will send out stream.\n                        - ONLY IF\n                        - you are an admin or monitor, or I am an admin\n                            - effectively, if I am a performer, I will only send you my stream if you have a higher authority than me\n                    */\n\n                    if (\n                        !methods.getConnectedUsers().includes(userID)\n                        && ([\"admin\", \"monitor\"].includes(remoteAuthority) || methods.getAuthority() === \"admin\") \n                    ) { \n\n\n\n                        // 1. mark the user as seen\n                        setters.appendKnownAuthority(userID, remoteAuthority)\n\n\n                        // 2. call the user using their ID, and send them your stream\n                        const call = peer.call(userID, rawStream, {metadata: {authority: methods.getAuthority()}})\n\n                        setters.appendUser(userID);\n                        // call.open && setters.appendUser(userID);\n                        // console.log(call.open)\n\n                        call.on(\"stream\", userVideoStream => {\n                            setters.appendStream(userVideoStream)\n                            // addVideoStream(video, userVideoStream, part)\n                        })\n                    }\n                })\n\n                socket.on(\"data-requested\", (data) => { // responds to data requests based on own stream id\n                    if (data.streamID === rawStream.id) {\n                        socket.emit(\"data-response\", { streamID: rawStream.id, ...queryParams })\n                    }\n                })\n\n            })\n\n\n        // secondary scope\n        socket.on(\"user-data-response\", data => {\n            setters.appendStreamData(data.streamID, data)\n        })\n\n        socket.on(\"user-disconnected\", userID => {\n            // peers[userID] && peers[userID].close()\n        })\n\n        socket.on(\"remove-stale-user\", data => {\n            console.log(\"WILL REMOVE STALE USER\")\n            console.log(data)\n            setters.removeStream(data.streamID)\n            // const staleStream = document.getElementById(data.streamID)\n            // staleStream.remove()\n        })\n\n\n        /* \n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        \\\\ CHAT MESSAGE \\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        */\n\n        socket.on(\"message-received\", ({name, message}) => {\n            setters.appendChatMessage({name, message, self: false, time: Date.now()})\n        })\n        \n\n\n    }, [])\n\n    return <></>\n\n}\n\nexport default ConnectionManager;","import React, { useContext, useEffect } from 'react';\n\n// ============================ STATE ============================\nimport { mainContext } from \"../state/main/mainProvider\"\n\n// ============================ HELPERS ============================\nimport socket from '../helpers/socket'\nimport { useParams } from 'react-router-dom';\n\nconst ConfigPanel = () => {\n\n    // STATE\n    const { state, setters, methods } = useContext(mainContext)\n    const {sessionID} = useParams()\n\n    // EVENTS\n    const handleRingClick = async e => {\n        setters.toggleRing()\n\n\n\n    }\n\n    useEffect(() => {\n\n        if (state.ring) {\n            const ringInterval = setInterval(() => {\n                const userID = methods.getUserID()\n                const ring = methods.getRing();\n                const authority = methods.getAuthority()\n\n                if (userID) {\n                    ring ? socket.emit(\"ring\", { sessionID, userID, authority }) : clearInterval(ringInterval);\n                }\n            }, 1000)\n        }\n\n    }, [state.ring])\n\n    return (\n        <div id=\"config-panel\">\n\n            <button onClick={handleRingClick}>\n                {\n                    state.ring\n                        ? \"Stop Ringing\"\n                        : \"Ring\"\n                }\n            </button>\n\n        </div>\n    )\n\n}\n\nexport default ConfigPanel","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport \"../css/chat-box.css\"\n\n// ======================== STATE ========================\nimport { mainContext } from '../state/main/mainProvider';\n\n// ======================== HELPERS ========================\nimport socket from '../helpers/socket'\nimport parseQueryString from '../helpers/parseQueryString'\n\nconst ChatBox = () => {\n\n    const { state, setters } = useContext(mainContext);\n    \n    const [isScrolledToBottom, setIsScrolledToBottom] = useState(true)\n    const queryParams = parseQueryString(window.location.search);\n\n    \n    const messageContainer = useRef(null);\n    const formRef = useRef(null);\n\n\n    // HELPERS\n\n    const formatTimeNumber = (num, type=null) => {\n        if(type === \"hours\"){\n            if (num > 12) num = num - 12\n        }\n        return num >= 10 ? num : `0${num}`\n    }\n\n    const renderChat = messages => {\n        return messages.map(message => {\n\n            const d = new Date(message.time)\n            const formattedTime = `${formatTimeNumber(d.getHours(), \"hours\")}:${formatTimeNumber(d.getMinutes())}:${formatTimeNumber(d.getSeconds())}`\n            return (\n                <div className={`chat-message-container from-self-${message.self}`} key={message.time}>\n                    <div className=\"chat-message-header\">\n                        <div className=\"chat-message-sender\">\n                            {message.name}\n                        </div>\n\n                        <div className=\"chat-message-time\">{formattedTime}</div>\n                    </div>\n\n                    <div className=\"chat-message-content\">{message.message}</div>\n                </div>\n            )\n        })\n    }\n\n    // EVENTS\n    const handleSubmit = e => {\n        console.log(\"SUBMITTING\")\n        e.preventDefault()\n\n        const textElement = e.target.firstChild\n\n        const value = textElement.value\n        textElement.value = \"\"\n\n\n        if(!/\\w{1,}/.test(value)) return // user must type at least 1 character to submit\n\n        const chatMessage = { name: queryParams.name || \"anonymous\", message: value }\n        socket.emit(\"chat-message\", chatMessage)\n\n\n        setters.appendChatMessage({ ...chatMessage, self: true, time: Date.now() })\n\n    }\n\n    const handleTextareaKey = e => {\n        if(e.keyCode === 13 && !e.shiftKey){\n            e.preventDefault()\n            formRef.current.dispatchEvent(new Event(\"submit\"))\n        }\n    }\n\n    const handleScroll = e => {\n        const currentScroll = e.target.scrollTop + e.target.clientHeight\n        if(\n            e.target.scrollHeight - 100 <= currentScroll // 100 us the allowable margin\n        ){\n            setIsScrolledToBottom(true)\n        } else {\n            setIsScrolledToBottom(false)\n        }\n    }\n\n\n    \n    useEffect(() => {\n        // handles scrolling to bottom on new message\n        const element = messageContainer.current    \n        if(isScrolledToBottom) element.scrollTop = element.scrollHeight;\n    }, [state.chat, isScrolledToBottom])\n\n\n    return (\n        <div id=\"chat-box\">\n\n            <div id=\"chat-box-display\" ref={messageContainer} onScroll={handleScroll}>\n                {renderChat(state.chat)}\n            </div>\n\n            <form id=\"chat-box-form\" onSubmit={handleSubmit} ref={formRef}>\n                {/* <input type=\"text\" /> */}\n                <textarea onKeyDown={handleTextareaKey}></textarea>\n            </form>\n\n        </div>\n    )\n\n}\n\nexport default ChatBox;","import React, { useContext } from 'react'\nimport { mainContext } from '../state/main/mainProvider';\n\nconst ReorderPanel = () => {\n\n\n    const {state, setters} = useContext(mainContext)\n\n    // HELPERS\n    const renderPanelOrder = streams => {\n\n        return streams.map((stream, i) => {\n            let name;\n            try{\n                name = document.getElementById(`name-${stream.id}`).innerText\n            } catch(err){\n                name = \"\"\n            }\n\n            name = !!name.length ? name : \"--\"\n            return (\n                <div key={stream.id} className=\"stream-order-box\">\n                    <label>{name} </label>\n                    <input className=\"order-number\" type=\"number\" defaultValue={i + 1} data-id={stream.id} min=\"1\" max={streams.length} />\n                </div>\n            )\n        })\n\n    }\n\n    // EVENTS\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const orderNums = [...document.getElementsByClassName('order-number')]\n        let newOrder = []\n        for(let el of orderNums){\n            newOrder.push([\n                parseInt(el.value),\n                el.dataset.id\n            ])\n        }\n\n        newOrder = newOrder.sort((a, b) => a[0] - b[0])\n\n        setters.setStreamOrder(newOrder);\n    }\n\n    return (\n        <>\n        <form id=\"reorder-panel\" onSubmit={handleSubmit}>\n            <h3>Reorder Videos</h3>\n            {renderPanelOrder(state.streams)}\n            <br/>\n            <input type=\"submit\" value=\"Reorder\"/>\n        </form>\n        <hr/>\n        </>\n    )\n\n}\n\nexport default ReorderPanel;","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport \"../css/media-settings.css\"\n\n// ======================= STATE =======================\nimport { mainContext } from '../state/main/mainProvider';\n\n// ======================= HELPERS =======================\nimport parseQueryString from '../helpers/parseQueryString';\nimport { renderIntoDocument } from 'react-dom/test-utils';\nimport ReorderPanel from './ReorderPanel';\n\nconst MediaSettingsPanel = () => {\n\n    const { state, setters } = useContext(mainContext);\n    const { sessionID, } = useParams()\n    const [queryString, setQueryString] = useState(null)\n    const [showApplyButton, setShowApplyButton] = useState(false)\n    const [modifiedQueryString, setModifiedQueryString] = useState(\"\")\n\n    // HELPERS\n    const parseSettings = () => {\n        const settings = [...document.getElementsByClassName(\"media-setting\")]\n\n        const settingsObj = {}\n\n        let key, value, override;\n        for (let setting of settings) {\n\n            key = setting.dataset.key\n            override = setting.dataset.override\n\n            if (setting.type === \"checkbox\") {\n                value = setting.checked\n            } else {\n                value = setting.value\n            }\n\n            // if(/override/.test(key) && value){\n            //     updatedString += `${key}=${value}&`    \n            // } else {\n            //     continue\n            // }\n\n            if (override !== undefined) {\n                if (!value) { // if override was specified and it is false, delete the key\n                    delete settingsObj[key]\n                }\n                continue\n            }\n\n            settingsObj[key] = value\n\n\n        }\n\n        let updatedString = \"\"\n        for (let [key, val] of Object.entries(settingsObj)) {\n            updatedString += `${key}=${val}&`\n\n        }\n\n        return updatedString\n\n    }\n\n    const renderShowVideoButtons = hiddenVideos => {\n        const btns = []\n        for (let [key, val] of Object.entries(hiddenVideos)) {\n            btns.push(\n                <button key={key} onClick={handleShowVideoButtonClick(key)}>Show {val}</button>\n            )\n        }\n        return btns\n    }\n\n    // EVENTS\n    const handleShowVideoButtonClick = streamID => e => {\n        setters.showHiddenVideo(streamID)\n    }\n\n    const handleChange = e => {\n        setShowApplyButton(true)\n\n        setModifiedQueryString(parseSettings())\n\n    }\n\n    const handleCheckNext = e => {\n        e.target.nextSibling.checked = true\n    }\n\n\n    useEffect(() => {\n        const queryString = parseQueryString(window.location.search)\n        setQueryString(queryString)\n    }, [])\n\n    return (\n        <>\n            <div id=\"media-settings-panel\" onChange={handleChange} >\n                {\n                    queryString\n                    &&\n                    <>\n                        {/* USER */}\n                        <div className=\"media-settings-section\">\n\n                            <label htmlFor=\"user-name\">Name </label>\n                            <input id=\"user-name\" className=\"media-setting\" data-key=\"name\" defaultValue={queryString.name || \"\"} />\n\n                            <br />\n\n                            <label htmlFor=\"user-location\">Location </label>\n                            <input id=\"user-location\" className=\"media-setting\" data-key=\"location\" defaultValue={queryString.location || \"\"} />\n\n                            <br />\n\n                            <label htmlFor=\"user-location\">Authority </label>\n                            <select data-key=\"authority\" className=\"media-setting\" defaultValue={queryString.authority || \"basic\"}>\n                                <option value=\"admin\">Admin</option>\n                                <option value=\"monitor\">Monitor</option>\n                                <option value=\"basic\">Performer</option>\n                            </select>\n\n                        </div>\n\n                        {/* AUDIO */}\n                        <div className=\"media-settings-section\">\n\n                            <label htmlFor=\"audio-include\">Include Audio </label>\n                            <input type=\"checkbox\" className=\"media-setting\" data-key=\"audio\" defaultChecked={queryString.audio === false ? false : true} />\n\n                            <br />\n\n                            <label htmlFor=\"audio-gain\">Auto Gain Control </label>\n                            <input type=\"checkbox\" className=\"media-setting\" data-key=\"autoGainControl\" defaultChecked={queryString.autoGainControl || false} />\n\n                            <br />\n\n                            <label htmlFor=\"audio-echo\">Echo Cancellation </label>\n                            <input type=\"checkbox\" className=\"media-setting\" data-key=\"echoCancellation\" defaultChecked={queryString.echoCancellation || false} />\n\n                            <br />\n\n                            <label htmlFor=\"audio-noise\">Noise Suppression </label>\n                            <input type=\"checkbox\" className=\"media-setting\" data-key=\"noiseSuppression\" defaultChecked={queryString.noiseSuppression || false} />\n\n                            <br />\n\n                            <label htmlFor=\"audio-channels\">Channel Count </label>\n                            <select data-key=\"channelCount\" className=\"media-setting\" defaultValue={queryString.channelCount || \"1\"} onChange={handleCheckNext}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                            </select>\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"channelCount\" data-key=\"channelCount\" defaultChecked={!!queryString.channelCount} />\n\n                            <br />\n\n                            <label htmlFor=\"audio-samples\">Sample Size </label>\n                            <select data-key=\"sampleSize\" className=\"media-setting\" defaultValue={queryString.sampleSize || \"16\"} onChange={handleCheckNext}>\n                                <option value=\"8\">8</option>\n                                <option value=\"16\">16</option>\n                                <option value=\"24\">24</option>\n                                <option value=\"32\">32</option>\n                            </select>\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"sampleSize\" data-key=\"sampleSize\" defaultChecked={!!queryString.sampleSize} />\n\n                        </div>\n\n                        {/* VIDEO */}\n                        <div className=\"media-settings-section\">\n                            <label htmlFor=\"video-include\">Include Video </label>\n                            <input type=\"checkbox\" className=\"media-setting\" data-key=\"video\" defaultChecked={queryString.video === false ? false : true} />\n\n                            <br />\n\n                            <label htmlFor=\"video-width\">Width </label>\n                            <input type=\"number\" className=\"media-setting\" data-key=\"width\" step=\"1\" min=\"10\" max=\"9999\" defaultValue={queryString.width || \"852\"} onChange={handleCheckNext} />\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"width\" data-key=\"width\" defaultChecked={!!queryString.width} />\n                            <br />\n\n                            <label htmlFor=\"video-height\">Height </label>\n                            <input type=\"number\" className=\"media-setting\" data-key=\"height\" step=\"1\" min=\"10\" max=\"9999\" defaultValue={queryString.height || \"480\"} onChange={handleCheckNext} />\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"height\" data-key=\"height\" defaultChecked={!!queryString.height} />\n\n                            <br />\n\n                            <label>Frame Rate </label>\n                            <input type=\"number\" className=\"media-setting\" data-key=\"frameRate\" step=\"1\" min=\"1\" max=\"99\" defaultValue={queryString.frameRate || \"30\"} onChange={handleCheckNext} />\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"frameRate\" data-key=\"frameRate\" defaultChecked={!!queryString.frameRate} />\n\n                            <br />\n\n                            <label>Resize Mode </label>\n                            <select data-key=\"resizeMode\" className=\"media-setting\" defaultValue={queryString.resizeMode || \"crop-and-scale\"} onChange={handleCheckNext}>\n                                <option value=\"none\">None</option>\n                                <option value=\"crop-and-scale\">crop and scale</option>\n                            </select>\n                            <input type=\"checkbox\" className=\"media-setting\" data-override=\"resizeMode\" data-key=\"resizeMode\" defaultChecked={!!queryString.resizeMode} />\n                        </div>\n\n\n                    </>\n                }\n            </div>\n            {showApplyButton && <a href={`${window.location.href.split(\"?\")[0]}?${modifiedQueryString}`}>Apply</a>}\n            <hr />\n            {\n                !!Object.keys(state.hiddenVideos).length\n                &&\n                <>\n                    <div>\n                        <h4>Hidden Streams</h4>\n                        {renderShowVideoButtons(state.hiddenVideos)}\n                    </div>\n                    <hr />\n                </>\n            }\n            <ReorderPanel />\n        </>\n    )\n\n}\n\nexport default MediaSettingsPanel","import React, { useState } from 'react';\n\n// ========================== CHILDREN ==========================\nimport MediaSettingsPanel from './MediaSettingsPanel';\n\n// ========================== MEDIA ==========================\nimport menu from '../media/menu.svg'\nimport close from '../media/close.svg'\n\nconst MediaSettingsContainer = () => {\n\n    const [showSettingsPanel, setShowSettingsPanel] = useState(false)\n\n    const handleClick = e => {\n        setShowSettingsPanel(!showSettingsPanel)\n    }\n\n    return (\n        <div id=\"media-settings-container\">\n            <div onClick={handleClick} style={{ cursor: \"pointer\", display: \"inline-block\" }}>\n                {\n                    showSettingsPanel\n                        ? <img src={close} />\n                        : <img src={menu} />\n                }\n            </div>\n            {\n                showSettingsPanel\n                &&\n                <MediaSettingsPanel />\n            }\n            <br />\n            <a href={window.location.href}>Reload</a>\n        </div>\n    )\n\n\n}\n\nexport default MediaSettingsContainer;","import React, { useEffect, useContext } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport SessionWindow from './components/SessionWindow';\nimport ConnectionManager from './components/ConnectionManager';\nimport ConfigPanel from './components/ConfigPanel';\nimport ChatBox from './components/ChatBox';\nimport MediaSettingsPanel from './components/MediaSettingsPanel';\nimport MediaSettingsContainer from './components/MediaSettingsContainer';\nimport { mainContext } from './state/main/mainProvider';\n\n\nfunction App() {\n\n    const {setters} = useContext(mainContext)\n\n    useEffect(() => {\n\n        const audioCtx = new AudioContext()\n        const masterGain = audioCtx.createGain()\n        \n        masterGain.gain.value = 1\n        masterGain.connect(audioCtx.destination)\n        \n        setters.setAudioContext(audioCtx)\n        setters.setMasterGain(masterGain)\n\n    }, [])\n\n    return (\n        <Router basename={process.env.PUBLIC_URL + '/'}>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        Maestro Streamer\n                        {/* <Redirect to={\"/session/umd\"} /> */}\n                        {/* <Link to=\"/session/123\">LINK</Link> */}\n                    </Route>\n\n                    <Route exact path=\"/session/:sessionID\">\n                        <ConnectionManager />\n                        <ConfigPanel />\n                        <SessionWindow />\n                        <ChatBox />\n                        <MediaSettingsContainer />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {MainProvider} from \"./state/main/mainProvider\";\n\nReactDOM.render(\n  <MainProvider>\n    <App />\n  </MainProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/menu.55f68494.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.98fdc312.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 71;"],"sourceRoot":""}